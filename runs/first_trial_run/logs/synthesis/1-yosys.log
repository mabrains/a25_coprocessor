
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v
Parsing SystemVerilog input from `/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v' to AST representation.
Generating RTLIL representation for module `\a25_coprocessor'.
Successfully finished Verilog frontend.

2. Generating Graphviz representation of design.
Writing dot description to `/openLANE_flow/designs/a25_coprocessor/runs/first_trial_run/tmp/synthesis/hierarchy.dot'.
Dumping module a25_coprocessor to page 1.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \a25_coprocessor

3.2. Analyzing design hierarchy..
Top module:  \a25_coprocessor
Removed 0 unused modules.

4. Executing TRIBUF pass.

5. Executing SYNTH pass.

5.1. Executing HIERARCHY pass (managing design hierarchy).

5.1.1. Analyzing design hierarchy..
Top module:  \a25_coprocessor

5.1.2. Analyzing design hierarchy..
Top module:  \a25_coprocessor
Removed 0 unused modules.

5.2. Executing PROC pass (convert processes to netlists).

5.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:138$11 in module a25_coprocessor.
Removed a total of 0 dead cases.

5.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 6 assignments to connections.

5.2.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:85$18'.
  Set init value: \fault_address = 0
Found init rule in `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:84$17'.
  Set init value: \fault_status = 8'00000000
Found init rule in `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:81$16'.
  Set init value: \disruptive_area = 0
Found init rule in `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:75$15'.
  Set init value: \updateable_area = 0
Found init rule in `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:70$14'.
  Set init value: \cacheable_area = 0
Found init rule in `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:66$13'.
  Set init value: \cache_control = 3'000

5.2.5. Executing PROC_ARST pass (detect async resets in processes).

5.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:85$18'.
Creating decoders for process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:84$17'.
Creating decoders for process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:81$16'.
Creating decoders for process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:75$15'.
Creating decoders for process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:70$14'.
Creating decoders for process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:66$13'.
Creating decoders for process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:138$11'.
     1/1: $0\o_copro_read_data[31:0]
Creating decoders for process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:119$3'.
     1/4: $0\disruptive_area[31:0]
     2/4: $0\updateable_area[31:0]
     3/4: $0\cacheable_area[31:0]
     4/4: $0\cache_control[2:0]
Creating decoders for process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:100$1'.
     1/2: $0\fault_address[31:0]
     2/2: $0\fault_status[7:0]

5.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).

5.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\a25_coprocessor.\o_copro_read_data' using process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:138$11'.
  created $dff cell `$procdff$68' with positive edge clock.
Creating register for signal `\a25_coprocessor.\cache_control' using process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:119$3'.
  created $dff cell `$procdff$69' with positive edge clock.
Creating register for signal `\a25_coprocessor.\cacheable_area' using process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:119$3'.
  created $dff cell `$procdff$70' with positive edge clock.
Creating register for signal `\a25_coprocessor.\updateable_area' using process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:119$3'.
  created $dff cell `$procdff$71' with positive edge clock.
Creating register for signal `\a25_coprocessor.\disruptive_area' using process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:119$3'.
  created $dff cell `$procdff$72' with positive edge clock.
Creating register for signal `\a25_coprocessor.\fault_status' using process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:100$1'.
  created $dff cell `$procdff$73' with positive edge clock.
Creating register for signal `\a25_coprocessor.\fault_address' using process `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:100$1'.
  created $dff cell `$procdff$74' with positive edge clock.

5.2.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:85$18'.
Removing empty process `a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:84$17'.
Removing empty process `a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:81$16'.
Removing empty process `a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:75$15'.
Removing empty process `a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:70$14'.
Removing empty process `a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:66$13'.
Found and cleaned up 2 empty switches in `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:138$11'.
Removing empty process `a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:138$11'.
Found and cleaned up 3 empty switches in `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:119$3'.
Removing empty process `a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:119$3'.
Found and cleaned up 2 empty switches in `\a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:100$1'.
Removing empty process `a25_coprocessor.$proc$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:100$1'.
Cleaned up 7 empty switches.

5.3. Executing FLATTEN pass (flatten design).

5.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.
<suppressed ~8 debug messages>

5.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..
Removed 3 unused cells and 30 unused wires.
<suppressed ~4 debug messages>

5.6. Executing CHECK pass (checking for obvious problems).
checking module a25_coprocessor..
found and reported 0 problems.

5.7. Executing OPT pass (performing simple optimizations).

5.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

5.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

5.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \a25_coprocessor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

5.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \a25_coprocessor.
Performed a total of 0 changes.

5.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
Removed a total of 0 cells.

5.7.6. Executing OPT_DFF pass (perform DFF optimizations).

5.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

5.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

5.7.9. Rerunning OPT passes. (Maybe there is more to do..)

5.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \a25_coprocessor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

5.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \a25_coprocessor.
Performed a total of 0 changes.

5.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
Removed a total of 0 cells.

5.7.13. Executing OPT_DFF pass (perform DFF optimizations).

5.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..

5.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

5.7.16. Finished OPT passes. (There is nothing left to do.)

5.8. Executing FSM pass (extract and optimize FSM).

5.8.1. Executing FSM_DETECT pass (finding FSMs in design).

5.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).

5.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).

5.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..

5.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).

5.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

5.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

5.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

5.9. Executing OPT pass (performing simple optimizations).

5.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

5.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
Removed a total of 0 cells.

5.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \a25_coprocessor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

5.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \a25_coprocessor.
Performed a total of 0 changes.

5.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
Removed a total of 0 cells.

5.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$74 ($dff) from module a25_coprocessor (D = \i_fault_address, Q = \fault_address).
Adding EN signal on $procdff$73 ($dff) from module a25_coprocessor (D = \i_fault_status, Q = \fault_status).
Adding EN signal on $procdff$72 ($dff) from module a25_coprocessor (D = \i_copro_write_data, Q = \disruptive_area).
Adding EN signal on $procdff$71 ($dff) from module a25_coprocessor (D = \i_copro_write_data, Q = \updateable_area).
Adding EN signal on $procdff$70 ($dff) from module a25_coprocessor (D = \i_copro_write_data, Q = \cacheable_area).
Adding EN signal on $procdff$69 ($dff) from module a25_coprocessor (D = \i_copro_write_data [2:0], Q = \cache_control).
Adding EN signal on $procdff$68 ($dff) from module a25_coprocessor (D = $procmux$20_Y, Q = \o_copro_read_data).

5.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..
Removed 17 unused cells and 17 unused wires.
<suppressed ~18 debug messages>

5.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

5.9.9. Rerunning OPT passes. (Maybe there is more to do..)

5.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \a25_coprocessor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

5.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \a25_coprocessor.
Performed a total of 0 changes.

5.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

5.9.13. Executing OPT_DFF pass (perform DFF optimizations).

5.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

5.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

5.9.16. Rerunning OPT passes. (Maybe there is more to do..)

5.9.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \a25_coprocessor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

5.9.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \a25_coprocessor.
Performed a total of 0 changes.

5.9.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
Removed a total of 0 cells.

5.9.20. Executing OPT_DFF pass (perform DFF optimizations).

5.9.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..

5.9.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

5.9.23. Finished OPT passes. (There is nothing left to do.)

5.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 4) from port B of cell a25_coprocessor.$eq$/openLANE_flow/designs/a25_coprocessor/src/a25_coprocessor.v:132$9 ($eq).
Removed top 1 bits (of 4) from port B of cell a25_coprocessor.$procmux$21_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell a25_coprocessor.$procmux$22_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell a25_coprocessor.$procmux$23_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell a25_coprocessor.$procmux$24_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell a25_coprocessor.$procmux$25_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell a25_coprocessor.$procmux$26_CMP0 ($eq).

5.11. Executing PEEPOPT pass (run peephole optimizers).

5.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..

5.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module a25_coprocessor:
  created 0 $alu and 0 $macc cells.

5.14. Executing SHARE pass (SAT-based resource sharing).

5.15. Executing OPT pass (performing simple optimizations).

5.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

5.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
Removed a total of 0 cells.

5.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \a25_coprocessor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

5.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \a25_coprocessor.
Performed a total of 0 changes.

5.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
Removed a total of 0 cells.

5.15.6. Executing OPT_DFF pass (perform DFF optimizations).

5.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..

5.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

5.15.9. Finished OPT passes. (There is nothing left to do.)

5.16. Executing MEMORY pass.

5.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

5.16.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

5.16.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..

5.16.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

5.16.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..

5.16.6. Executing MEMORY_COLLECT pass (generating $mem cells).

5.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..

5.18. Executing OPT pass (performing simple optimizations).

5.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

5.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
Removed a total of 0 cells.

5.18.3. Executing OPT_DFF pass (perform DFF optimizations).

5.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..

5.18.5. Finished fast OPT passes.

5.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

5.20. Executing OPT pass (performing simple optimizations).

5.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

5.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
Removed a total of 0 cells.

5.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \a25_coprocessor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

5.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \a25_coprocessor.
Performed a total of 0 changes.

5.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
Removed a total of 0 cells.

5.20.6. Executing OPT_SHARE pass.

5.20.7. Executing OPT_DFF pass (perform DFF optimizations).

5.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..

5.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

5.20.10. Finished OPT passes. (There is nothing left to do.)

5.21. Executing TECHMAP pass (map to technology primitives).

5.21.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=7 for cells of type $pmux.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
No more expansions possible.
<suppressed ~147 debug messages>

5.22. Executing OPT pass (performing simple optimizations).

5.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.
<suppressed ~192 debug messages>

5.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
<suppressed ~60 debug messages>
Removed a total of 20 cells.

5.22.3. Executing OPT_DFF pass (perform DFF optimizations).

5.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..
Removed 0 unused cells and 150 unused wires.
<suppressed ~1 debug messages>

5.22.5. Finished fast OPT passes.

5.23. Executing ABC pass (technology mapping using ABC).

5.23.1. Extracting gate netlist of module `\a25_coprocessor' to `<abc-temp-dir>/input.blif'..
Extracted 332 gates and 480 wires to a netlist network with 147 inputs and 38 outputs.

5.23.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:      215
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       62
ABC RESULTS:             ORNOT cells:       35
ABC RESULTS:        internal signals:      295
ABC RESULTS:           input signals:      147
ABC RESULTS:          output signals:       38
Removing temp directory.

5.24. Executing OPT pass (performing simple optimizations).

5.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

5.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
Removed a total of 0 cells.

5.24.3. Executing OPT_DFF pass (perform DFF optimizations).

5.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..
Removed 0 unused cells and 280 unused wires.
<suppressed ~1 debug messages>

5.24.5. Finished fast OPT passes.

5.25. Executing HIERARCHY pass (managing design hierarchy).

5.25.1. Analyzing design hierarchy..
Top module:  \a25_coprocessor

5.25.2. Analyzing design hierarchy..
Top module:  \a25_coprocessor
Removed 0 unused modules.

5.26. Printing statistics.

=== a25_coprocessor ===

   Number of wires:                310
   Number of wire bits:            619
   Number of public wires:          23
   Number of public wire bits:     301
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                490
     $_ANDNOT_                     215
     $_AND_                          1
     $_DFFE_PN_                     32
     $_DFFE_PP_                    139
     $_NAND_                         4
     $_NOR_                          1
     $_NOT_                          1
     $_ORNOT_                       35
     $_OR_                          62

5.27. Executing CHECK pass (checking for obvious problems).
checking module a25_coprocessor..
found and reported 0 problems.

6. Executing SHARE pass (SAT-based resource sharing).

7. Executing OPT pass (performing simple optimizations).

7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
Removed a total of 0 cells.

7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \a25_coprocessor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \a25_coprocessor.
Performed a total of 0 changes.

7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\a25_coprocessor'.
Removed a total of 0 cells.

7.6. Executing OPT_DFF pass (perform DFF optimizations).

7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..

7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module a25_coprocessor.

7.9. Finished OPT passes. (There is nothing left to do.)

8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

9. Printing statistics.

=== a25_coprocessor ===

   Number of wires:                309
   Number of wire bits:            618
   Number of public wires:          22
   Number of public wire bits:     300
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                490
     $_ANDNOT_                     215
     $_AND_                          1
     $_DFFE_PN_                     32
     $_DFFE_PP_                    139
     $_NAND_                         4
     $_NOR_                          1
     $_NOT_                          1
     $_ORNOT_                       35
     $_OR_                          62

mapping tbuf

10. Executing TECHMAP pass (map to technology primitives).

10.1. Executing Verilog-2005 frontend: /home/ubuntu/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v
Parsing Verilog input from `/home/ubuntu/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/tribuff_map.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

11. Executing SIMPLEMAP pass (map simple cells to gate primitives).

12. Executing MUXCOVER pass (mapping to wider MUXes).
Covering MUX trees in module a25_coprocessor..
  Treeifying 0 MUXes:
    Finished treeification: Found 0 trees.
  Covering trees:
  Added a total of 0 decoder MUXes.
<suppressed ~1 debug messages>

13. Executing TECHMAP pass (map to technology primitives).

13.1. Executing Verilog-2005 frontend: /home/ubuntu/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux4_map.v
Parsing Verilog input from `/home/ubuntu/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux4_map.v' to AST representation.
Generating RTLIL representation for module `\$_MUX4_'.
Successfully finished Verilog frontend.

13.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

14. Executing SIMPLEMAP pass (map simple cells to gate primitives).

15. Executing TECHMAP pass (map to technology primitives).

15.1. Executing Verilog-2005 frontend: /home/ubuntu/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux2_map.v
Parsing Verilog input from `/home/ubuntu/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/mux2_map.v' to AST representation.
Generating RTLIL representation for module `\$_MUX_'.
Successfully finished Verilog frontend.

15.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

16. Executing SIMPLEMAP pass (map simple cells to gate primitives).

17. Executing TECHMAP pass (map to technology primitives).

17.1. Executing Verilog-2005 frontend: /home/ubuntu/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v
Parsing Verilog input from `/home/ubuntu/openlane/pdks/sky130A/libs.tech/openlane/sky130_fd_sc_hd/latch_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

18. Executing SIMPLEMAP pass (map simple cells to gate primitives).

19. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_2 (noninv, pins=3, area=21.27) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_2 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_2 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

19.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\a25_coprocessor':
  mapped 171 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_2 cells.

20. Printing statistics.

=== a25_coprocessor ===

   Number of wires:                480
   Number of wire bits:            789
   Number of public wires:          22
   Number of public wire bits:     300
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                661
     $_ANDNOT_                     215
     $_AND_                          1
     $_MUX_                        171
     $_NAND_                         4
     $_NOR_                          1
     $_NOT_                          1
     $_ORNOT_                       35
     $_OR_                          62
     sky130_fd_sc_hd__dfxtp_2      171

[INFO]: ABC: WireLoad : S_4

21. Executing ABC pass (technology mapping using ABC).

21.1. Extracting gate netlist of module `\a25_coprocessor' to `/tmp/yosys-abc-dDeXVs/input.blif'..
Extracted 490 gates and 741 wires to a netlist network with 251 inputs and 172 outputs.

21.1.1. Executing ABC.
Running ABC command: /build/bin/yosys-abc -s -f /tmp/yosys-abc-dDeXVs/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-dDeXVs/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-dDeXVs/input.blif 
ABC: + read_lib -w /openLANE_flow/designs/a25_coprocessor/runs/first_trial_run/tmp/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.08 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/openLANE_flow/designs/a25_coprocessor/runs/first_trial_run/tmp/trimmed.lib" has 175 cells (17 skipped: 14 seq; 3 tri-state; 0 no func; 0 dont_use).  Time =     0.12 sec
ABC: Memory =    7.77 MB. Time =     0.12 sec
ABC: Warning: Detected 2 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /openLANE_flow/designs/a25_coprocessor/runs/first_trial_run/tmp/synthesis/yosys.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_8".
ABC: Setting output load to be 17.650000.
ABC: + read_constr /openLANE_flow/designs/a25_coprocessor/runs/first_trial_run/tmp/synthesis/yosys.sdc 
ABC: + fx 
ABC: The network is unchanged by fast extract.
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 20000.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + fraig_store 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + fraig_store 
ABC: + fraig_restore 
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 20000.0 
ABC: + buffer -N 5 -S 2000.0 
ABC: + upsize -D 20000.0 
ABC: Current delay (2074.28 ps) does not exceed the target delay (20000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 20000.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =    508 ( 47.6 %)   Cap =  8.7 ff (  8.6 %)   Area =     3689.79 ( 52.4 %)   Delay =  2064.35 ps  ( 13.8 %)               
ABC: Path  0 --     246 : 0    2 pi                      A =   0.00  Df =   8.8   -6.1 ps  S =  21.0 ps  Cin =  0.0 ff  Cout =   6.8 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --     436 : 1    5 sky130_fd_sc_hd__buf_1  A =   3.75  Df = 123.1  -28.2 ps  S = 105.5 ps  Cin =  2.1 ff  Cout =   8.1 ff  Cmax = 130.0 ff  G =  361  
ABC: Path  2 --     446 : 4    5 sky130_fd_sc_hd__or4_2  A =   8.76  Df = 794.9 -517.0 ps  S = 129.2 ps  Cin =  1.5 ff  Cout =  10.2 ff  Cmax = 310.4 ff  G =  650  
ABC: Path  3 --     763 : 4    5 sky130_fd_sc_hd__or4_2  A =   8.76  Df =1416.8 -993.5 ps  S = 142.2 ps  Cin =  1.5 ff  Cout =  13.4 ff  Cmax = 310.4 ff  G =  858  
ABC: Path  4 --     766 : 1    4 sky130_fd_sc_hd__inv_2  A =   3.75  Df =1514.9-1046.3 ps  S =  63.2 ps  Cin =  4.5 ff  Cout =   8.8 ff  Cmax = 331.4 ff  G =  188  
ABC: Path  5 --     767 : 1    5 sky130_fd_sc_hd__buf_1  A =   3.75  Df =1671.0-1086.8 ps  S = 145.7 ps  Cin =  2.1 ff  Cout =  11.6 ff  Cmax = 130.0 ff  G =  520  
ABC: Path  6 --     768 : 1    5 sky130_fd_sc_hd__buf_1  A =   3.75  Df =1853.5-1136.0 ps  S = 156.4 ps  Cin =  2.1 ff  Cout =  12.5 ff  Cmax = 130.0 ff  G =  551  
ABC: Path  7 --     769 : 4    1 sky130_fd_sc_hd__a22o_2 A =  10.01  Df =2064.4  -38.7 ps  S = 104.9 ps  Cin =  2.3 ff  Cout =  17.6 ff  Cmax = 301.2 ff  G =  751  
ABC: Start-point = pi245 (\i_copro_crn [0]).  End-point = po63 ($auto$rtlil.cc:2290:MuxGate$1645).
ABC: + print_stats -m 
ABC: netlist                       : i/o =  251/  172  lat =    0  nd =   508  edge =   1307  area =3688.91  delay = 8.00  lev = 8
ABC: + write_blif /tmp/yosys-abc-dDeXVs/output.blif 

21.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a22o_2 cells:      168
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:      107
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:      135
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__nand2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor3_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o211ai_2 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__o221ai_2 cells:       24
ABC RESULTS:   sky130_fd_sc_hd__o22a_2 cells:       19
ABC RESULTS:   sky130_fd_sc_hd__or2_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__or2b_2 cells:       13
ABC RESULTS:   sky130_fd_sc_hd__or3_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__or4_2 cells:        7
ABC RESULTS:        internal signals:      318
ABC RESULTS:           input signals:      251
ABC RESULTS:          output signals:      172
Removing temp directory.

22. Executing SETUNDEF pass (replace undef values with defined constants).

23. Executing HILOMAP pass (mapping to constant drivers).

24. Executing SPLITNETS pass (splitting up multi-bit signals).

25. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \a25_coprocessor..
Removed 0 unused cells and 741 unused wires.
<suppressed ~1 debug messages>

26. Executing INSBUF pass (insert buffer cells for connected wires).
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2283: \o_cacheable_area [0] -> \cacheable_area[0]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2284: \o_cacheable_area [1] -> \cacheable_area[1]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2285: \o_cacheable_area [2] -> \cacheable_area[2]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2286: \o_cacheable_area [3] -> \cacheable_area[3]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2287: \o_cacheable_area [4] -> \cacheable_area[4]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2288: \o_cacheable_area [5] -> \cacheable_area[5]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2289: \o_cacheable_area [6] -> \cacheable_area[6]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2290: \o_cacheable_area [7] -> \cacheable_area[7]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2291: \o_cacheable_area [8] -> \cacheable_area[8]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2292: \o_cacheable_area [9] -> \cacheable_area[9]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2293: \o_cacheable_area [10] -> \cacheable_area[10]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2294: \o_cacheable_area [11] -> \cacheable_area[11]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2295: \o_cacheable_area [12] -> \cacheable_area[12]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2296: \o_cacheable_area [13] -> \cacheable_area[13]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2297: \o_cacheable_area [14] -> \cacheable_area[14]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2298: \o_cacheable_area [15] -> \cacheable_area[15]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2299: \o_cacheable_area [16] -> \cacheable_area[16]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2300: \o_cacheable_area [17] -> \cacheable_area[17]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2301: \o_cacheable_area [18] -> \cacheable_area[18]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2302: \o_cacheable_area [19] -> \cacheable_area[19]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2303: \o_cacheable_area [20] -> \cacheable_area[20]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2304: \o_cacheable_area [21] -> \cacheable_area[21]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2305: \o_cacheable_area [22] -> \cacheable_area[22]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2306: \o_cacheable_area [23] -> \cacheable_area[23]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2307: \o_cacheable_area [24] -> \cacheable_area[24]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2308: \o_cacheable_area [25] -> \cacheable_area[25]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2309: \o_cacheable_area [26] -> \cacheable_area[26]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2310: \o_cacheable_area [27] -> \cacheable_area[27]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2311: \o_cacheable_area [28] -> \cacheable_area[28]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2312: \o_cacheable_area [29] -> \cacheable_area[29]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2313: \o_cacheable_area [30] -> \cacheable_area[30]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2314: \o_cacheable_area [31] -> \cacheable_area[31]
Added a25_coprocessor.$auto$insbuf.cc:79:execute$2315: \o_cache_enable -> \cache_control[0]

27. Executing CHECK pass (checking for obvious problems).
checking module a25_coprocessor..
Warning: Wire a25_coprocessor.\o_copro_read_data [31] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [30] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [29] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [28] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [27] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [26] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [25] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [24] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [23] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [22] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [21] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [20] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [19] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [18] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [17] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [16] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [15] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [14] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [13] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [12] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [11] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [10] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [9] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [8] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [7] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [6] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [5] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [4] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [3] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [2] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [1] is used but has no driver.
Warning: Wire a25_coprocessor.\o_copro_read_data [0] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [31] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [30] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [29] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [28] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [27] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [26] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [25] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [24] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [23] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [22] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [21] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [20] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [19] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [18] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [17] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [16] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [15] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [14] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [13] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [12] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [11] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [10] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [9] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [8] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [7] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [6] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [5] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [4] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [3] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [2] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [1] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cacheable_area [0] is used but has no driver.
Warning: Wire a25_coprocessor.\o_cache_flush is used but has no driver.
Warning: Wire a25_coprocessor.\o_cache_enable is used but has no driver.
found and reported 66 problems.

28. Printing statistics.

=== a25_coprocessor ===

   Number of wires:                662
   Number of wire bits:            807
   Number of public wires:         155
   Number of public wire bits:     300
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                712
     sky130_fd_sc_hd__a22o_2       168
     sky130_fd_sc_hd__buf_1        107
     sky130_fd_sc_hd__buf_2         33
     sky130_fd_sc_hd__dfxtp_2      171
     sky130_fd_sc_hd__inv_2        135
     sky130_fd_sc_hd__mux2_2         3
     sky130_fd_sc_hd__nand2_2        1
     sky130_fd_sc_hd__nor3_2         1
     sky130_fd_sc_hd__o211ai_2       8
     sky130_fd_sc_hd__o221a_2       16
     sky130_fd_sc_hd__o221ai_2      24
     sky130_fd_sc_hd__o22a_2        19
     sky130_fd_sc_hd__or2_2          1
     sky130_fd_sc_hd__or2b_2        13
     sky130_fd_sc_hd__or3_2          5
     sky130_fd_sc_hd__or4_2          7

   Chip area for module '\a25_coprocessor': 7492.185600

29. Executing Verilog backend.
Dumping module `\a25_coprocessor'.

Warnings: 66 unique messages, 66 total
End of script. Logfile hash: fb3720cefe, CPU: user 0.90s system 0.02s, MEM: 45.81 MB peak
Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)
Time spent: 51% 2x abc (0 sec), 15% 4x stat (0 sec), ...
